# Vulnerability Manager using Lists and Dictionaries

# This is our main database
vuln_db = {}

# Function to add a new host
def add_host(ip):
    if ip not in vuln_db:
        vuln_db[ip] = {"ports": [], "vulnerabilities": []}
        print(f"[+] Host {ip} added.")
    else:
        print(f"[!] Host {ip} already exists.")

# Function to add a port to a host
def add_port(ip, port):
    if ip in vuln_db:
        if port not in vuln_db[ip]["ports"]:
            vuln_db[ip]["ports"].append(port)
            print(f"[+] Port {port} added to {ip}.")
        else:
            print(f"[!] Port {port} already exists for {ip}.")
    else:
        print(f"[!] Host {ip} not found.")

# Function to add a vulnerability to a host
def add_vulnerability(ip, cve, severity, description):
    if ip in vuln_db:
        vuln = {
            "cve": cve,
            "severity": severity,
            "description": description
        }
        vuln_db[ip]["vulnerabilities"].append(vuln)
        print(f"[+] Vulnerability {cve} added to {ip}.")
    else:
        print(f"[!] Host {ip} not found.")

# Function to display the full report
def show_report():
    if not vuln_db:
        print("[-] No hosts found.")
        return

    print("\n=== Vulnerability Report ===")
    for ip, data in vuln_db.items():
        print(f"\nHost: {ip}")
        print(f"  Open Ports: {', '.join(map(str, data['ports'])) or 'None'}")

        if data["vulnerabilities"]:
            print("  Vulnerabilities:")
            for vuln in data["vulnerabilities"]:
                print(f"    - {vuln['cve']} ({vuln['severity']}): {vuln['description']}")
        else:
            print("  No vulnerabilities reported.")

# === DEMO USAGE ===

# Adding hosts
add_host("192.168.0.1")
add_host("192.168.0.104")

# Adding ports
add_port("192.168.0.1", 22)
add_port("192.168.0.1", 80)
add_port("192.168.0.1", 443)

# Adding vulnerabilities
add_vulnerability("192.168.0.1", "CVE-2024-1234", "high", "Remote code execution in SSH")
add_vulnerability("192.168.0.1", "CVE-2023-9999", "medium", "Info leak in HTTP")

# Showing final report
show_report()
